name: Python CI/CD Workflow

on:
  push:
    branches:
      - main
      - spark
  pull_request:
    branches:
      - main
      - spark

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.12

      - name: Install Dependencies
        run: |
          set -e
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyspark==3.5.3 hadoop-aws

      - name: Set AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        run: |
          echo "AWS Credentials are set."

      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE/src" >> $GITHUB_ENV

      - name: Train Model
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        run: |
          set -e
          source venv/bin/activate
          if [ -f "src/train_rf_tuning.py" ]; then
            python src/train_rf_tuning.py
          else
            echo "train_rf_tuning.py not found. Please ensure the file is present in the repository." && exit 1
          fi

      - name: Upload Model Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: model-artifacts
          path: models/tuned_rf_model

      - name: Lint Code
        run: |
          set -e
          source venv/bin/activate
          pylint src tests

      - name: Run Tests
        run: |
          set -e
          source venv/bin/activate
          pytest tests/ --junitxml=pytest-report.xml

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: pytest-report
          path: pytest-report.xml
